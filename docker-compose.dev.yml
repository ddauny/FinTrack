version: '3.8'

services:
  #################
  # Database (Sviluppo)
  #################
  db:
    image: postgres:15-alpine
    container_name: fintrack-dev-db # Aggiunto -dev
    ports:
      - "5432:5432" # Esponiamo la porta per il debug
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: fintrack
    volumes:
      - fintrack-dev-data:/var/lib/postgresql/data # Volume separato
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d fintrack"]
      interval: 5s
      timeout: 5s
      retries: 10

  #################
  # Backend (Sviluppo)
  #################
  app:
    container_name: fintrack-dev-app # Aggiunto -dev
    build:
      context: .
      dockerfile: ./server/Dockerfile # Usa il Dockerfile di sviluppo
    ports:
      - "4000:4000"
    env_file:
      - .env.dev # Usa un file .env separato
    volumes:
      # Hot-reloading: collega il tuo codice locale al container
      - ./server:/app/server
      # Volume "anonimo" per node_modules per evitare conflitti
      - /app/server/node_modules
    command: sh -c "npx prisma migrate deploy && npm run dev"
    depends_on:
      db:
        condition: service_healthy

  #################
  # Frontend (Sviluppo)
  #################
  client:
    container_name: fintrack-dev-client # Aggiunto -dev
    build:
      context: ./client
      dockerfile: Dockerfile # Usa il Dockerfile di sviluppo
    ports:
      - "5173:5173"
    volumes:
      # Hot-reloading: collega il tuo codice locale al container
      - ./client:/app/client
      # Volume "anonimo" per node_modules
      - /app/client/node_modules
    depends_on:
      - app
    environment:
      # Necessario per far funzionare Vite/hot-reload
      - CHOKIDAR_USEPOLLING=true

volumes:
  fintrack-dev-data: # Volume dati separato per lo sviluppo
