# -----------------
# CLIENT BUILDER
# -----------------
FROM node:18-alpine AS client-builder
WORKDIR /app/client
COPY client/package*.json ./
RUN npm ci
COPY client/ ./
RUN npm run build

# -----------------
# SERVER BUILDER
# -----------------
FROM node:18-alpine AS server-builder
WORKDIR /app/server
COPY server/package*.json ./
RUN npm ci
COPY server/ ./
RUN npm run build

# -----------------
# IMMAGINE FINALE
# -----------------
FROM node:18-alpine AS production
WORKDIR /app

# 1. Copia i file del client (come prima)
COPY --from=client-builder /app/client/dist ./client

# 2. Copia i file del server (package.json prima)
#    ⬇️⬇️ CORREZIONE 1: Aggiunto * per copiare anche package-lock.json
COPY --from=server-builder /app/server/package*.json ./server/
COPY --from=server-builder /app/server/prisma ./server/prisma/

# 3. Copia il codice compilato
COPY --from=server-builder /app/server/dist ./server/dist/

# 4. Copia i file di configurazione non-TS (es. .js, .json) che 'tsc' ignora.
COPY --from=server-builder /app/server/src/config ./server/dist/config/

# 5. Imposta la WORKDIR per i comandi successivi
WORKDIR /app/server

# 6. Installa SOLO le dipendenze di produzione
#    ⬇️⬇️ CORREZIONE 2: Usato --omit=dev come suggerito da npm
RUN npm ci --omit=dev

EXPOSE 4000
CMD ["npm", "start"]

